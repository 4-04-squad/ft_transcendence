server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name 404squad.games;

    root /usr/share/nginx/html/app/dist;
    index index.html;
    charset utf-8;
    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    client_max_body_size 100M;

    # SSL/TLS configuration
    ssl_certificate /etc/nginx/ssl/live/404squad.games/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/404squad.games/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1h;
    ssl_session_tickets on;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256;


    # Serve static files directly from the `dist` folder
    location / {
        try_files $uri $uri/ /index.html;
        gzip_static on;
        expires max;
        add_header Cache-Control public;
    }

    # Route requests to Nest.js application on port 3001
    location /api {
        add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        proxy_cache off;
        proxy_pass http://backend:3001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # WebSocket connection for the backend
    location /ws {
        proxy_pass http://backend:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }

    # Serve static files directly
    location /static/ {
        alias /var/www/html/static/;
        gzip_static on;
        expires max;
        add_header Cache-Control public;
    }

    # Handle errors
    error_page 404 /404.html;
    location = /404.html {
        internal;
    }
}
